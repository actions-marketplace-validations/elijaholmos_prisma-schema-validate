import{createRequire as e}from"module";var n={};(()=>{n.d=(e,r)=>{for(var t in r){if(n.o(r,t)&&!n.o(e,t)){Object.defineProperty(e,t,{enumerable:true,get:r[t]})}}}})();(()=>{n.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n)})();if(typeof n!=="undefined")n.ab=new URL(".",import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/)?1:0,-1)+"/";var r={};n.d(r,{Z:()=>main});const t=e(import.meta.url)("child_process");const installPrisma=async function(){const e=(0,t.spawn)("npm",["install","prisma"],{stdio:"inherit"});const n=await new Promise<number>((n,r)=>{e.on("error",r);e.on("close",n)});return n};async function main(){core.info("Installing Prisma...");await installPrisma();core.info("Prisma installed!");const e=(0,t.spawn)("npx",["prisma","validate"],{stdio:"inherit"});e.on("message",core.info)}var a=r.Z;export{a as default};